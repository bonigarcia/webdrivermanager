name: release
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout GitHub repo
      uses: actions/checkout@v5
    - name: Set up Java
      uses: actions/setup-java@v5.0.0
      with:
        distribution: 'temurin'
        java-version: 17
        cache: 'maven'
    - name: Configure Git
      run: |
        git config user.name "Boni Garcia"
        git config user.email "boni.garcia@uc3m.es"
    - name: Import GPG key
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
        mkdir -p ~/.gnupg
        echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
        gpgconf --kill gpg-agent || true
    - name: Configure Maven settings
      run: |
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml <<EOF
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
          <servers>
            <server>
              <id>central</id>
              <username>${{ secrets.MAVEN_USERNAME }}</username>
              <password>${{ secrets.MAVEN_PASSWORD }}</password>
            </server>
          </servers>
        </settings>
        EOF
    - name: Make release in Maven Central
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        mvn --batch-mode clean release:clean release:prepare release:perform \
            -DreleaseVersion=${{ inputs.release_version }} \
            -DautoVersionSubmodules=true \
            -Dscm.url=https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git \
            -Dscm.developerConnection=https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git \
            -Darguments="-DskipTests -Dgpg.executable=gpg"
    - name: Generate fat JAR
      run: |
        mvn versions:set -DnewVersion=${{ inputs.release_version }}
        mvn compile assembly:single
        mv target/*fat*.jar docker
    - name: Make release in GitHub
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: webdrivermanager-${{ inputs.release_version }}
        draft: false
        prerelease: false
        files: |
          docker/webdrivermanager-${{ inputs.release_version }}-fat.jar
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: bonigarcia
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./docker
        push: true
        tags: bonigarcia/webdrivermanager:${{ inputs.release_version }}
        build-args: |
          VERSION=${{ inputs.release_version }}
    - name: Update doc
      run: |
        mvn site -Ddoc.version=${{ inputs.release_version }}
        git add docs
        git commit -m "Update docs for release ${{ inputs.release_version }}" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
